// Generated by Xata Codegen 0.23.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "posts",
    columns: [
      { name: "title", type: "string" },
      { name: "tags", type: "multiple" },
      { name: "slug", type: "string" },
      { name: "text", type: "text" },
      { name: "created_at", type: "datetime" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Posts = InferredTypes["posts"];
export type PostsRecord = Posts & XataRecord;

export type DatabaseSchema = {
  posts: PostsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Jason-Lengstorf-s-workspace-bko3dj.us-east-1.xata.sh/db/posts",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
